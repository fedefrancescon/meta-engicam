diff -ruN a/binutils/coffdump.c b/binutils/coffdump.c
--- a/binutils/coffdump.c	2020-09-27 09:11:28.538862242 +0200
+++ b/binutils/coffdump.c	2020-05-30 20:08:26.246913977 +0200
@@ -456,8 +456,6 @@
     dump_coff_section (ptr->sections + i);
 }
 
-char * program_name;
-
 static void
 show_usage (FILE *file, int status)
 {
diff -ruN a/binutils/dwarf.c b/binutils/dwarf.c
--- a/binutils/dwarf.c	2020-09-27 08:03:40.798209151 +0200
+++ b/binutils/dwarf.c	2020-09-27 09:08:06.327586963 +0200
@@ -4905,6 +4905,11 @@
 		  strncpy (newFileName,
 			   fileName + fileNameLength - MAX_FILENAME_LENGTH,
 			   MAX_FILENAME_LENGTH + 1);
+		  /* FIXME: This is to pacify gcc-10 which can warn that the
+		     strncpy above might leave a non-NUL terminated string
+		     in newFileName.  It won't, but gcc's analysis doesn't
+		     quite go far enough to discover this.  */
+		  newFileName[MAX_FILENAME_LENGTH] = 0;
 		}
 	      else
 		{
diff -ruN a/binutils/srconv.c b/binutils/srconv.c
--- a/binutils/srconv.c	2020-09-27 09:11:28.593862317 +0200
+++ b/binutils/srconv.c	2020-05-30 20:09:00.966943692 +0200
@@ -1687,8 +1687,6 @@
     }
 }
 
-char *program_name;
-
 ATTRIBUTE_NORETURN static void
 show_usage (FILE *ffile, int status)
 {
diff -ruN a/binutils/sysdump.c b/binutils/sysdump.c
--- a/binutils/sysdump.c	2020-09-27 09:11:28.594862318 +0200
+++ b/binutils/sysdump.c	2020-05-30 20:09:19.583959621 +0200
@@ -633,8 +633,6 @@
     }
 }
 
-char *program_name;
-
 ATTRIBUTE_NORETURN static void
 show_usage (FILE *ffile, int status)
 {
